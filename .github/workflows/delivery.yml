# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: delivery
on:
  push:
    branches: [main]
    paths-ignore:
      - .gitignore
      - .github/**
      - "!.github/workflows/delivery.yml"
      - .idea/**
      - .vscode/**
      - "**.md"
      - "**.rst"
      - "**.txt"
      - tests.py
      - setup.sh

env: # env available for only this steps
  ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
  DEFAULT_FROM_EMAIL: ${{ DEFAULT_FROM_EMAIL }}
  EMAIL_URL: ${{ EMAIL_URL }}
  GLITCHTIP_BASE_URL: ${GLITCHTIP_BASE_URL}
  GLITCHTIP_DOMAIN: ${{ GLITCHTIP_BASE_URL }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  SHA: ${{ github.sha }}
  SECRET_KEY: ${{ SECRET_KEY }}

jobs:
  changed-files:
    name: Get changed files
    runs-on: ubuntu-latest
    outputs:
      added-files: ${{ steps.changed-files.outputs.added_files }}
      deleted-files: ${{ steps.changed-files.outputs.deleted_files }}
      modified-files: ${{ steps.changed-files.outputs.modified_files }}
      all-changed-files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v29.0.3
  push-image:
    name: Push image
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Check out main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache dotenv
        id: cache-dotenv
        uses: actions/cache@v3
        with:
          path: .env
          key: env-vars-${{ hashFiles('.env.*') }}
      - name: Generate .env file
        uses: iacobfred/generate-dotenv@v0.2.4
        with:
          template-paths: |
            .config/_.env
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image with cache
        id: build_with_cache
        # https://github.com/docker/build-push-action
        uses: docker/build-push-action@v3
        with:
          build-args: |
            NODE_ENV=production
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./apps/web/Dockerfile
          push: true
          # no-cache: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secret-files: ENV_FILE=./.env
          tags: ghcr.io/iacobfred/selfbuilder:${{ github.sha }},ghcr.io/iacobfred/selfbuilder:latest
      - name: Build image without cache
        if: ${{ failure() && steps.build_with_cache.outcome == 'failure' }}
        # https://github.com/docker/build-push-action
        uses: docker/build-push-action@v3
        with:
          build-args: |
            NODE_ENV=production
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./apps/web/Dockerfile
          push: true
          no-cache: true
          secret-files: ENV_FILE=./.env
          tags: ghcr.io/iacobfred/selfbuilder:${{ github.sha }},ghcr.io/iacobfred/selfbuilder:latest
  deploy:
    name: Deploy
    needs: [changed-files, push-image]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Check out main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate .env file
        uses: iacobfred/generate-dotenv@v0.2.4
        with:
          template-paths: |
            .config/_.env
      - name: Deploy to server
        uses: iacobfred/deploy-docker-ssh@v0.2.8
        with:
          host: ${{ secrets.DOMAIN }}
          user: jacob
          target: /var/www/${{ secrets.DOMAIN }}
          files: ".env docker-compose.yml .config"
          ssh-port: ${{ secrets.SSH_PORT }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          command: "set -a && source .env && set +a && SHA=${{ github.sha }} GHCR_PASSWORD=${{ secrets.GITHUB_TOKEN }} docker compose pull && docker compose up -d && if [ $RELOAD_WEBSERVER = true ]; then echo 'Reloading webserver...'; nginx -s reload; fi; docker system prune -f"
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          RELOAD_WEBSERVER: ${{ contains(needs.changed-files.outputs.modified-files, 'nginx.conf') }}
          SERVER_HOST: ${{ secrets.DOMAIN }}
          SERVER_TARGET: /var/www/${{ secrets.DOMAIN }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
